version: 2.1

orbs:
  aws-cli: circleci/aws-cli@0.1.16
  aws-ecr: circleci/aws-ecr@6.15.3
  aws-eks: circleci/aws-eks@1.1.0
  kubernetes: circleci/kubernetes@1.0.1
  slack: circleci/slack@3.4.2
  aws-cloudformation: orbss/aws-cloudformation@0.1.6

filter_ignore_main_branches: &filter_ignore_main_branches
  filters:
    branches:
      ignore:
        - develop
        - /RC-.*.0/
        - sandbox
        - pre-prod
        - covid-prod
        - covid-staging
        - master

steps:
  - &run_checkstyle
    run:
      name: Running Checkstyle
      command: |
        cd ~/project
        ./gradlew checkstyleMain

  - &run_test
    run:
      name: Running Application Test
      environment:
        TERM: dumb
      command: |
        cd ~/project
        ./gradlew test --stacktrace

  - &install_test_reporter
    run:
      name: Install Test Suite
      command: |
        curl -L https://codeclimate.com/downloads/test-reporter/test-reporter-latest-linux-amd64 > ./cc-test-reporter
        chmod +x ./cc-test-reporter

  - &upload_test_results
    run:
      name: Upload Test Results
      command: |
        cd ~/project
        JACOCO_SOURCE_PATH="src/main/java" ./cc-test-reporter format-coverage build/codeCoverage/test/jacocoTestReport.xml -t jacoco
        ./cc-test-reporter upload-coverage -r $CODE_CLIMATE_KEY

  - &prepare_newman
    run:
      name: prepare newman schema checks
      command: |
        sleep 180
        sudo apt update
        sudo apt -y upgrade
        curl -sL https://deb.nodesource.com/setup_10.x | sudo -E bash -
        sudo apt install nodejs
        sudo npm install -g newman

  - &copy_schema_check_file
    run:
      name: copy json file
      command: |
        cd ~/project
        case << parameters.env >> in
          dev)
            cp postman-collections/schema-chk/lplus-consumer-schema-check.postman_collection.json .circleci/scripts/lplus-consumer-schema-check.postman_collection.json
            cp postman-collections/schema-chk/gooddata1.csv .circleci/scripts/dev_data.csv
            ;;
          aqa)
            cp postman-collections/schema-chk/lplus-consumer-schema-check.postman_collection.json .circleci/scripts/lplus-consumer-schema-check.postman_collection.json
            cp postman-collections/schema-chk/aqa/aqa_data.csv .circleci/scripts/aqa_data.csv
            ;;
          staging)
            cp postman-collections/schema-chk/lplus-consumer-schema-check.postman_collection.json .circleci/scripts/lplus-consumer-schema-check.postman_collection.json
            cp postman-collections/schema-chk/Staging/stage_data.csv .circleci/scripts/staging_data.csv
            ;;
          covid_staging)
            cp postman-collections/schema-chk/COVID/lplus-consumer-schema-check-COVID.postman_collection.json .circleci/scripts/lplus-consumer-schema-check.postman_collection.json
            cp postman-collections/schema-chk/COVID/COVID-Staging_Data.csv .circleci/scripts/covid_staging_data.csv
            ;;
          covid_prod)
            cp postman-collections/schema-chk/COVID/lplus-consumer-schema-check-COVID.postman_collection.json .circleci/scripts/lplus-consumer-schema-check.postman_collection.json
            cp postman-collections/schema-chk/COVID/COVID_Data.csv .circleci/scripts/covid_prod_data.csv
            ;;
          prod)
            cp postman-collections/schema-chk/lplus-consumer-schema-check.postman_collection.json .circleci/scripts/lplus-consumer-schema-check.postman_collection.json
            cp postman-collections/schema-chk/Prod/Prod_Data.csv .circleci/scripts/prod_data.csv
            ;;
          *)
            ;;
        esac

  - &schema_check_step
    run:
      name: schema check
      command: |
        cd ~/project/.circleci/scripts
        sed -i -- "s|cognito.username.placeholder|${cognito_username_<< parameters.env >>}|" ./<< parameters.env >>_postman_environment.json
        sed -i -- "s|cognito.password.placeholder|${cognito_password_<< parameters.env >>}|" ./<< parameters.env >>_postman_environment.json
        newman run lplus-consumer-schema-check.postman_collection.json -e << parameters.env >>_postman_environment.json -d << parameters.env >>_data.csv

commands:
  copy_schema_check:
    description: "copy schema file"
    parameters:
      env:
        description: environment value
        type: string
    steps:
      - *copy_schema_check_file

  schema_check:
    description: "run schema check"
    parameters:
      env:
        description: environment value
        type: string
    steps:
      - *schema_check_step

jobs:
  test-code:
    docker:
      - image: circleci/openjdk:11.0.3-jdk-stretch
    steps:
      - checkout
      - *run_test
      - *install_test_reporter
      - *upload_test_results

  checkstyle:
    docker:
      - image: circleci/openjdk:11.0.3-jdk-stretch
    steps:
      - checkout
      - *run_checkstyle

  schema-check-dev:
    docker:
      - image: circleci/openjdk:11.0.3-jdk-stretch
    steps:
      - checkout
      - *prepare_newman
      - copy_schema_check:
          env: dev
      - schema_check:
          env: dev
      - slack/status:
          fail_only: true
          webhook: $SLACK_ALERT_WEBHOOK_DEV

  schema-check-aqa:
    docker:
      - image: circleci/openjdk:11.0.3-jdk-stretch
    steps:
      - checkout
      - *prepare_newman
      - copy_schema_check:
          env: aqa
      - schema_check:
          env: aqa
      - slack/status:
          fail_only: true
          webhook: $SLACK_ALERT_WEBHOOK_DEV

  schema-check-staging:
    docker:
      - image: circleci/openjdk:11.0.3-jdk-stretch
    steps:
      - checkout
      - *prepare_newman
      - copy_schema_check:
          env: staging
      - schema_check:
          env: staging
      - slack/status:
          fail_only: true
          webhook: $SLACK_ALERT_WEBHOOK_STAGING

  schema-check-covid-staging:
    docker:
      - image: circleci/openjdk:11.0.3-jdk-stretch
    steps:
      - checkout
      - *prepare_newman
      - copy_schema_check:
          env: covid_staging
      - schema_check:
          env: covid_staging
      - slack/status:
          fail_only: true
          webhook: $SLACK_ALERT_WEBHOOK_COVID_STAGING

  schema-check-covid-prod:
    docker:
      - image: circleci/openjdk:11.0.3-jdk-stretch
    steps:
      - checkout
      - *prepare_newman
      - copy_schema_check:
          env: covid_prod
      - schema_check:
          env: covid_prod
      - slack/status:
          fail_only: true
          webhook: $SLACK_ALERT_WEBHOOK_COVID_PROD

  schema-check-prod:
    docker:
      - image: circleci/openjdk:11.0.3-jdk-stretch
    steps:
      - checkout
      - *prepare_newman
      - copy_schema_check:
          env: prod
      - schema_check:
          env: prod
      - slack/status:
          fail_only: true
          webhook: $SLACK_ALERT_WEBHOOK_PROD

  update-datadog-monitor:
    parameters:
      dd-env:
        description: env value shared for DD tags, query, slack channel name, etc.
        type: string
    docker:
      - image: circleci/python:3.8.3
    steps:
      - checkout
      - run:
          name: Run Python DataDog Script
          command: |
            cd ~/project/.circleci/scripts/datadog
            python3 -m venv datadog-env
            source datadog-env/bin/activate
            pip3 install datadog
            python3 monitor_check.py $DD_API_KEY $DD_APPLICATION_KEY << parameters.dd-env >>

  ## We only have one alert for prod pods to set downtime for
  set-downtime-for-prod-cluster-datadog-alert:
    docker:
      - image: cimg/base:2021.04
    steps:
      - checkout
      - run:
          name: Run Set Downtime Script
          command: |
            cd ~/project/.circleci/scripts/datadog
            sh ./downtime-scheduler.sh

  deploy-api-gateway:
    parameters:
      api-id:
        description: id of rest api
        type: string
      stage:
        description: api gateway stage name
        type: string
      stage-url:
        description: stage variable url
        type: string
    docker:
      - image: circleci/python:3.8.3
    steps:
      - aws-cli/setup
      - run:
          name: create a new api gateway deployment
          command: aws apigateway create-deployment --rest-api-id << parameters.api-id >> --stage-name << parameters.stage >> --variables url=<< parameters.stage-url >> --description 'Deployed using AWSCLI from CircleCI'

  kube-create-update:
    parameters:
      kube-dir:
        description: full path of folder containing kube yml files
        type: string
      cluster-name:
        description: name of the kube cluster
        type: string
      env:
        description: environment
        type: string
    docker:
      - image: circleci/python:3.8.3
    steps:
      - checkout
      - kubernetes/install-kubectl
      - aws-cli/setup
      - run:
          name: create kubeconfig file
          command: aws eks update-kubeconfig --name << parameters.cluster-name >>
      - run:
          name: populate secret file
          command: |
            sed -i -- "s|kube.key.placeholder|${kube_access_key_id_<< parameters.env >>}|" << parameters.kube-dir >>/05_secret.yml
            sed -i -- "s|kube.secret.placeholder|${kube_secret_key_<< parameters.env >>}|" << parameters.kube-dir >>/05_secret.yml
      - kubernetes/create-or-update-resource:
          resource-file-path: << parameters.kube-dir >>
          resource-name: deployment/lplus-consumer-apis-deploy
          show-kubectl-command: true

  update-image:
    parameters:
      cluster-name:
        description: name of the kube cluster
        type: string
      aws-region:
        description: aws region
        type: string
      container-image-updates:
        description: image path
        type: string
      namespace:
        description: namespace
        type: string
      resource-name:
        description: resource name
        type: string
    docker:
      - image: circleci/python:3.8.3
    steps:
      - checkout
      - kubernetes/install-kubectl
      - aws-cli/setup
      - run:
          name: create kubeconfig file
          command: aws eks update-kubeconfig --name << parameters.cluster-name >>
      - run:
          name: update container image
          command: |
            kubectl set image << parameters.resource-name >> << parameters.container-image-updates >> --namespace=<< parameters.namespace >>


workflows:
  version: 2
  tests:
    jobs:
      - checkstyle:
          <<: *filter_ignore_main_branches
      - test-code:
          <<: *filter_ignore_main_branches

  build-and-push-image-dev:
    jobs:
      - test-code:
          filters:
            branches:
              only:
                - develop
      - kube-create-update:
          context: aws_dev
          env: dev
          cluster-name: eks-cross-team
          kube-dir: /home/circleci/project/kube/dev
          requires:
            - test-code
      - aws-ecr/build-and-push-image:
          context: aws_dev
          dockerfile: Dockerfile
          repo: s4-lis-consumer-api
          tag: "latest,${CIRCLE_SHA1}"
          requires:
            - kube-create-update
      - update-image:
          context: aws_dev
          aws-region: us-east-1
          cluster-name: eks-cross-team
          container-image-updates: "lplus-consumer-apis=098006065408.dkr.ecr.us-east-1.amazonaws.com/s4-lis-consumer-api:${CIRCLE_SHA1}"
          namespace: sema4-echo-dev
          resource-name: deployment/lplus-consumer-apis-deploy
          requires:
            - aws-ecr/build-and-push-image
      # requires manual creation of CloudFormation stack first
      - aws-cloudformation/deploy:
          name: api-gateway-cf-deploy
          context: aws_dev
          stack-name: lplus-consumer-api-gateway
          template-file-path: /home/circleci/project/cloudformation/lplus-consumer-apis-gateway-cf-template.yaml
          extra-arguments: --no-fail-on-empty-changeset --s3-bucket echo-cloudformation-dev --parameter-overrides ParameterKey=apiName,ParameterValue=lplus-consumer-apis ParameterKey=providerARN,ParameterValue=arn:aws:cognito-idp:us-east-1:098006065408:userpool/us-east-1_9GViRi5Vf ParameterKey=connectionId,ParameterValue=sixeyv ParameterKey=environment,ParameterValue=sema4-lis-dev
          requires:
            - update-image
      # requires manual creation of CloudFormation stack first
      - aws-cloudformation/deploy:
          name: cognito-cf-deploy
          context: aws_dev
          stack-name: lplus-consumer-apis-cognito
          template-file-path: /home/circleci/project/cloudformation/cognito_resources_template.yml
          extra-arguments: --no-fail-on-empty-changeset --s3-bucket echo-cloudformation-dev --parameter-overrides ParameterKey=UserPoolIdParameter,ParameterValue=us-east-1_9GViRi5Vf
          requires:
            - update-image
      - update-datadog-monitor:
          dd-env: Dev
          requires:
            - update-image
      # requires manual creation of api gateway first
      - deploy-api-gateway:
          context: aws_dev
          api-id: ji6bnf60xi
          stage-url: a90f3c9e0e0a311e9a9520aef493da44-d893daa969b3c8ee.elb.us-east-1.amazonaws.com/consumer-apis
          stage: dev
          requires:
            - api-gateway-cf-deploy
      - schema-check-dev:
          requires:
            - deploy-api-gateway

  build-and-push-image-aqa:
    jobs:
      - test-code:
          filters:
            branches:
              only:
                - develop
      - kube-create-update:
          context: aws_dev
          env: dev
          cluster-name: eks-cross-team
          kube-dir: /home/circleci/project/kube/aqa
          requires:
            - test-code
      - aws-ecr/build-and-push-image:
          context: aws_dev
          dockerfile: Dockerfile
          repo: s4-lis-consumer-api
          tag: "latest,${CIRCLE_SHA1}"
          requires:
            - kube-create-update
      - update-image:
          context: aws_dev
          aws-region: us-east-1
          cluster-name: eks-cross-team
          container-image-updates: "lplus-consumer-apis=098006065408.dkr.ecr.us-east-1.amazonaws.com/s4-lis-consumer-api:${CIRCLE_SHA1}"
          namespace: sema4-echo-aqa
          resource-name: deployment/lplus-consumer-apis-deploy
          requires:
            - aws-ecr/build-and-push-image
      - aws-cloudformation/deploy:
          name: api-gateway-cf-deploy
          context: aws_dev
          stack-name: lplus-consumer-apis-aqa
          template-file-path: /home/circleci/project/cloudformation/lplus-consumer-apis-gateway-cf-template.yaml
          extra-arguments: --no-fail-on-empty-changeset --s3-bucket echo-cloudformation-dev --parameter-overrides ParameterKey=apiName,ParameterValue=lplus-consumer-apis-aqa ParameterKey=providerARN,ParameterValue=arn:aws:cognito-idp:us-east-1:098006065408:userpool/us-east-1_9GViRi5Vf ParameterKey=connectionId,ParameterValue=sixeyv ParameterKey=environment,ParameterValue=sema4-lis-aqa
          requires:
            - update-image
      - aws-cloudformation/deploy:
          name: cognito-cf-deploy
          context: aws_dev
          stack-name: lplus-consumer-apis-cognito
          template-file-path: /home/circleci/project/cloudformation/cognito_resources_template.yml
          extra-arguments: --no-fail-on-empty-changeset --s3-bucket echo-cloudformation-dev --parameter-overrides ParameterKey=UserPoolIdParameter,ParameterValue=us-east-1_9GViRi5Vf
          requires:
            - update-image
      - deploy-api-gateway:
          context: aws_dev
          api-id: hffrex0c83
          stage-url: a90f3c9e0e0a311e9a9520aef493da44-d893daa969b3c8ee.elb.us-east-1.amazonaws.com/consumer-apis
          stage: aqa
          requires:
            - api-gateway-cf-deploy
      - schema-check-aqa:
          requires:
            - deploy-api-gateway

  build-and-push-image-sandbox:
    jobs:
      - test-code:
          filters:
            branches:
              only:
                - sandbox
      - kube-create-update:
          context: aws_dev
          env: dev
          cluster-name: eks-cross-team
          kube-dir: /home/circleci/project/kube/sandbox
          requires:
            - test-code
      - aws-ecr/build-and-push-image:
          context: aws_dev
          dockerfile: Dockerfile
          repo: s4-lis-consumer-api
          tag: "latest,${CIRCLE_SHA1}"
          requires:
            - kube-create-update
      - update-image:
          context: aws_dev
          aws-region: us-east-1
          cluster-name: eks-cross-team
          container-image-updates: "lplus-consumer-apis=098006065408.dkr.ecr.us-east-1.amazonaws.com/s4-lis-consumer-api:${CIRCLE_SHA1}"
          namespace: sema4-echo-sandbox
          resource-name: deployment/lplus-consumer-apis-deploy
          requires:
            - aws-ecr/build-and-push-image
      - aws-cloudformation/deploy:
          name: api-gateway-cf-deploy
          context: aws_dev
          stack-name: lplus-consumer-apis-sandbox
          template-file-path: /home/circleci/project/cloudformation/lplus-consumer-apis-gateway-cf-template.yaml
          extra-arguments: --no-fail-on-empty-changeset --s3-bucket echo-cloudformation-dev --parameter-overrides ParameterKey=apiName,ParameterValue=lplus-consumer-apis-sandbox ParameterKey=providerARN,ParameterValue=arn:aws:cognito-idp:us-east-1:098006065408:userpool/us-east-1_9GViRi5Vf ParameterKey=connectionId,ParameterValue=sixeyv ParameterKey=environment,ParameterValue=sema4-lis-sandbox
          requires:
            - update-image
      - aws-cloudformation/deploy:
          name: cognito-cf-deploy
          context: aws_dev
          stack-name: lplus-consumer-apis-cognito
          template-file-path: /home/circleci/project/cloudformation/cognito_resources_template.yml
          extra-arguments: --no-fail-on-empty-changeset --s3-bucket echo-cloudformation-dev --parameter-overrides ParameterKey=UserPoolIdParameter,ParameterValue=us-east-1_9GViRi5Vf
          requires:
            - update-image
      - deploy-api-gateway:
          context: aws_dev
          api-id: ezh9hrn5x5
          stage-url: a90f3c9e0e0a311e9a9520aef493da44-d893daa969b3c8ee.elb.us-east-1.amazonaws.com/consumer-apis
          stage: sandbox
          requires:
            - api-gateway-cf-deploy

  build-and-push-image-staging:
    jobs:
      - test-code:
          filters:
            branches:
              only: /RC-.*.0/
      - slack/approval-notification:
          requires:
            - test-code
      - approval-staging-deploy:
          type: approval
          requires:
            - slack/approval-notification
      - kube-create-update:
          context: aws_staging
          env: staging
          cluster-name: eks-cross-team-staging
          kube-dir: /home/circleci/project/kube/staging
          requires:
            - approval-staging-deploy
      - aws-ecr/build-and-push-image:
          context: aws_staging
          dockerfile: Dockerfile
          repo: s4-lis-consumer-api
          tag: "latest,${CIRCLE_SHA1}"
          requires:
            - kube-create-update
      - update-image:
          context: aws_staging
          aws-region: us-east-1
          cluster-name: eks-cross-team-staging
          container-image-updates: "lplus-consumer-apis=302045810143.dkr.ecr.us-east-1.amazonaws.com/s4-lis-consumer-api:${CIRCLE_SHA1}"
          namespace: sema4-echo
          resource-name: deployment/lplus-consumer-apis-deploy
          requires:
            - aws-ecr/build-and-push-image
      - aws-cloudformation/deploy:
          name: api-gateway-cf-deploy
          context: aws_staging
          stack-name: lplus-consumer-api-gateway
          template-file-path: /home/circleci/project/cloudformation/lplus-consumer-apis-gateway-cf-template.yaml
          extra-arguments: --no-fail-on-empty-changeset --s3-bucket echo-cloudformation-staging --parameter-overrides ParameterKey=apiName,ParameterValue=lplus-consumer-apis ParameterKey=providerARN,ParameterValue=arn:aws:cognito-idp:us-east-1:302045810143:userpool/us-east-1_mDhPlxTTj ParameterKey=connectionId,ParameterValue=u8yob9 ParameterKey=environment,ParameterValue=sema4-lis-staging
          requires:
            - update-image
      - aws-cloudformation/deploy:
          name: cognito-cf-deploy
          context: aws_staging
          stack-name: lplus-consumer-apis-cognito
          template-file-path: /home/circleci/project/cloudformation/cognito_resources_template.yml
          extra-arguments: --no-fail-on-empty-changeset --s3-bucket echo-cloudformation-staging --parameter-overrides ParameterKey=UserPoolIdParameter,ParameterValue=us-east-1_mDhPlxTTj
          requires:
            - update-image
      - update-datadog-monitor:
          dd-env: Staging
          requires:
            - update-image
      - deploy-api-gateway:
          context: aws_staging
          api-id: qcd5qm4uk7
          stage-url: abec94ec5f45611e9afa6028a79d0908-0985d6c350ae4ac1.elb.us-east-1.amazonaws.com/consumer-apis
          stage: staging
          requires:
            - api-gateway-cf-deploy
      - schema-check-staging:
          requires:
            - deploy-api-gateway

  build-and-push-image-covid-staging:
    jobs:
      - test-code:
          filters:
            branches:
              only: covid-staging
      - slack/approval-notification:
          requires:
            - test-code
      - approval-covid-staging-deploy:
          type: approval
          requires:
            - slack/approval-notification
      - kube-create-update:
          context: aws_staging
          env: staging
          cluster-name: eks-cross-team-staging
          kube-dir: /home/circleci/project/kube/covid-staging
          requires:
            - approval-covid-staging-deploy
      - aws-ecr/build-and-push-image:
          context: aws_staging
          dockerfile: Dockerfile
          repo: s4-lis-consumer-api-covid-staging
          tag: "latest,${CIRCLE_SHA1}"
          requires:
            - kube-create-update
      - update-image:
          context: aws_staging
          aws-region: us-east-1
          cluster-name: eks-cross-team-staging
          container-image-updates: "lplus-consumer-apis=302045810143.dkr.ecr.us-east-1.amazonaws.com/s4-lis-consumer-api-covid-staging:${CIRCLE_SHA1}"
          namespace: sema4-echo-covid-staging
          resource-name: deployment/lplus-consumer-apis-deploy
          requires:
            - aws-ecr/build-and-push-image
      - aws-cloudformation/deploy:
          name: api-gateway-cf-deploy
          context: aws_staging
          stack-name: lplus-consumer-api-gateway-covid-staging
          template-file-path: /home/circleci/project/cloudformation/lplus-consumer-apis-gateway-cf-template.yaml
          extra-arguments: --no-fail-on-empty-changeset --s3-bucket echo-cloudformation-staging --parameter-overrides ParameterKey=apiName,ParameterValue=lplus-consumer-apis-covid-staging ParameterKey=providerARN,ParameterValue=arn:aws:cognito-idp:us-east-1:302045810143:userpool/us-east-1_mDhPlxTTj ParameterKey=connectionId,ParameterValue=u8yob9 ParameterKey=environment,ParameterValue=sema4-lis-covid-staging
          requires:
            - update-image
      - aws-cloudformation/deploy:
          name: cognito-cf-deploy
          context: aws_staging
          stack-name: lplus-consumer-apis-cognito
          template-file-path: /home/circleci/project/cloudformation/cognito_resources_template.yml
          extra-arguments: --no-fail-on-empty-changeset --s3-bucket echo-cloudformation-staging --parameter-overrides ParameterKey=UserPoolIdParameter,ParameterValue=us-east-1_mDhPlxTTj
          requires:
            - update-image
      - update-datadog-monitor:
          dd-env: COVID-Staging
          requires:
            - update-image
      - deploy-api-gateway:
          context: aws_staging
          api-id: kgcy0ta2ce
          stage-url: abec94ec5f45611e9afa6028a79d0908-0985d6c350ae4ac1.elb.us-east-1.amazonaws.com/lplus-consumer-apis-covid-staging
          stage: covid-staging
          requires:
            - api-gateway-cf-deploy
      - schema-check-covid-staging:
          requires:
            - deploy-api-gateway

  build-and-push-image-pre-prod:
    jobs:
      - test-code:
          filters:
            branches:
              only: pre-prod
      - slack/approval-notification:
          requires:
            - test-code
      - approval-pre-prod-deploy:
          type: approval
          requires:
            - slack/approval-notification
      - kube-create-update:
          context: aws_production
          env: prod
          cluster-name: cross-team-prod
          kube-dir: /home/circleci/project/kube/pre-prod
          requires:
            - approval-pre-prod-deploy
      - aws-ecr/build-and-push-image:
          context: aws_production
          dockerfile: Dockerfile
          repo: s4-lis-consumer-api-pre-prod
          tag: "latest,${CIRCLE_SHA1}"
          requires:
            - kube-create-update
      - update-image:
          context: aws_production
          aws-region: us-east-1
          cluster-name: cross-team-prod
          container-image-updates: "lplus-consumer-apis=760773724421.dkr.ecr.us-east-1.amazonaws.com/s4-lis-consumer-api-pre-prod:${CIRCLE_SHA1}"
          namespace: sema4-echo-pre-prod
          resource-name: deployment/lplus-consumer-apis-deploy
          requires:
            - aws-ecr/build-and-push-image
      - aws-cloudformation/deploy:
          name: api-gateway-cf-deploy
          context: aws_production
          stack-name: lplus-consumer-api-gateway-pre-prod
          template-file-path: /home/circleci/project/cloudformation/lplus-consumer-apis-gateway-cf-template.yaml
          extra-arguments: --no-fail-on-empty-changeset --s3-bucket echo-cloudformation-prod --parameter-overrides ParameterKey=apiName,ParameterValue=lplus-consumer-api-gateway-pre-prod ParameterKey=providerARN,ParameterValue=arn:aws:cognito-idp:us-east-1:760773724421:userpool/us-east-1_SHEYVnfq7 ParameterKey=connectionId,ParameterValue=o8asiq ParameterKey=environment,ParameterValue=sema4-lis-pre-prod
          requires:
            - update-image
      - aws-cloudformation/deploy:
          name: cognito-cf-deploy
          context: aws_production
          stack-name: lplus-consumer-api-cognito
          template-file-path: /home/circleci/project/cloudformation/cognito_resources_template.yml
          extra-arguments: --no-fail-on-empty-changeset --s3-bucket echo-cloudformation-prod --parameter-overrides ParameterKey=UserPoolIdParameter,ParameterValue=us-east-1_SHEYVnfq7
          requires:
            - update-image
      - update-datadog-monitor:
          dd-env: Pre-Prod
          requires:
            - update-image
      - deploy-api-gateway:
          context: aws_production
          api-id: 2opuld3a61
          stage-url: a714cecb71cfd11eaa7650a0451cb344-675759ad5ad70114.elb.us-east-1.amazonaws.com/lplus-consumer-apis-pre-prod
          stage: pre-prod
          requires:
            - api-gateway-cf-deploy

  build-and-push-image-covid-prod:
    jobs:
      - test-code:
          filters:
            branches:
              only: covid-prod
      - slack/approval-notification:
          requires:
            - test-code
      - approval-covid-prod-deploy:
          type: approval
          requires:
            - slack/approval-notification
      - set-downtime-for-prod-cluster-datadog-alert:
          requires:
            - approval-covid-prod-deploy
      - kube-create-update:
          context: aws_production
          env: prod
          cluster-name: cross-team-prod
          kube-dir: /home/circleci/project/kube/covid-prod
          requires:
            - approval-covid-prod-deploy
      - aws-ecr/build-and-push-image:
          context: aws_production
          dockerfile: Dockerfile
          repo: s4-lis-consumer-api-covid-prod
          tag: "latest,${CIRCLE_SHA1}"
          requires:
            - kube-create-update
      - update-image:
          context: aws_production
          aws-region: us-east-1
          cluster-name: cross-team-prod
          container-image-updates: "lplus-consumer-apis=760773724421.dkr.ecr.us-east-1.amazonaws.com/s4-lis-consumer-api-covid-prod:${CIRCLE_SHA1}"
          namespace: sema4-echo-covid-prod
          resource-name: deployment/lplus-consumer-apis-deploy
          requires:
            - aws-ecr/build-and-push-image
      - aws-cloudformation/deploy:
          name: api-gateway-cf-deploy
          context: aws_production
          stack-name: lplus-consumer-api-gateway-covid-prod
          template-file-path: /home/circleci/project/cloudformation/lplus-consumer-apis-gateway-cf-template.yaml
          extra-arguments: --no-fail-on-empty-changeset --s3-bucket echo-cloudformation-prod --parameter-overrides ParameterKey=apiName,ParameterValue=lplus-consumer-api-gateway-covid-prod ParameterKey=providerARN,ParameterValue=arn:aws:cognito-idp:us-east-1:760773724421:userpool/us-east-1_SHEYVnfq7 ParameterKey=connectionId,ParameterValue=o8asiq ParameterKey=environment,ParameterValue=sema4-lis-covid-prod
          requires:
            - update-image
      - aws-cloudformation/deploy:
          name: cognito-cf-deploy
          context: aws_production
          stack-name: lplus-consumer-api-cognito
          template-file-path: /home/circleci/project/cloudformation/cognito_resources_template.yml
          extra-arguments: --no-fail-on-empty-changeset --s3-bucket echo-cloudformation-prod --parameter-overrides ParameterKey=UserPoolIdParameter,ParameterValue=us-east-1_SHEYVnfq7
          requires:
            - update-image
      - update-datadog-monitor:
          dd-env: COVID-Prod
          requires:
            - update-image
      - deploy-api-gateway:
          context: aws_production
          api-id: vtpixe1rpa
          stage-url: a714cecb71cfd11eaa7650a0451cb344-675759ad5ad70114.elb.us-east-1.amazonaws.com/lplus-consumer-apis-covid-prod
          stage: covid-prod
          requires:
            - api-gateway-cf-deploy
      - schema-check-covid-prod:
          requires:
            - deploy-api-gateway

  build-and-push-image-production:
    jobs:
      - test-code:
          filters:
            branches:
              only: master
      - slack/approval-notification:
          requires:
            - test-code
      - approval-production-deploy:
          type: approval
          requires:
            - slack/approval-notification
      - set-downtime-for-prod-cluster-datadog-alert:
          requires:
            - approval-production-deploy
      - kube-create-update:
          context: aws_production
          env: prod
          cluster-name: cross-team-prod
          kube-dir: /home/circleci/project/kube/production
          requires:
            - approval-production-deploy
      - aws-ecr/build-and-push-image:
          context: aws_production
          dockerfile: Dockerfile
          repo: s4-lis-consumer-api
          tag: "latest,${CIRCLE_SHA1}"
          requires:
            - kube-create-update
      - update-image:
          context: aws_production
          aws-region: us-east-1
          cluster-name: cross-team-prod
          container-image-updates: "lplus-consumer-apis=760773724421.dkr.ecr.us-east-1.amazonaws.com/s4-lis-consumer-api:${CIRCLE_SHA1}"
          namespace: sema4-echo-prod
          resource-name: deployment/lplus-consumer-apis-deploy
          requires:
            - aws-ecr/build-and-push-image
      - aws-cloudformation/deploy:
          name: api-gateway-cf-deploy
          context: aws_production
          stack-name: lplus-consumer-api-gateway
          template-file-path: /home/circleci/project/cloudformation/lplus-consumer-apis-gateway-cf-template.yaml
          extra-arguments: --no-fail-on-empty-changeset --s3-bucket echo-cloudformation-prod --parameter-overrides ParameterKey=apiName,ParameterValue=lplus-consumer-api-gateway ParameterKey=providerARN,ParameterValue=arn:aws:cognito-idp:us-east-1:760773724421:userpool/us-east-1_SHEYVnfq7 ParameterKey=connectionId,ParameterValue=o8asiq ParameterKey=environment,ParameterValue=sema4-lis-prod
          requires:
            - update-image
      - aws-cloudformation/deploy:
          name: cognito-cf-deploy
          context: aws_production
          stack-name: lplus-consumer-api-cognito
          template-file-path: /home/circleci/project/cloudformation/cognito_resources_template.yml
          extra-arguments: --no-fail-on-empty-changeset --s3-bucket echo-cloudformation-prod --parameter-overrides ParameterKey=UserPoolIdParameter,ParameterValue=us-east-1_SHEYVnfq7
          requires:
            - update-image
      - update-datadog-monitor:
          dd-env: Prod
          requires:
            - update-image
      - deploy-api-gateway:
          context: aws_production
          api-id: x8okminc2i
          stage-url: a714cecb71cfd11eaa7650a0451cb344-675759ad5ad70114.elb.us-east-1.amazonaws.com/consumer-apis
          stage: prod
          requires:
            - api-gateway-cf-deploy
      - schema-check-prod:
          requires:
            - deploy-api-gateway
